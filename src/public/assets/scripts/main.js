!function(e){var n={};function t(i){if(n[i])return n[i].exports;var s=n[i]={i:i,l:!1,exports:{}};return e[i].call(s.exports,s,s.exports,t),s.l=!0,s.exports}t.m=e,t.c=n,t.d=function(e,n,i){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:i})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(t.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var s in e)t.d(i,s,function(n){return e[n]}.bind(null,s));return i},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="/",t(t.s=0)}({0:function(e,n,t){t("WfG0"),e.exports=t("zcrr")},WfG0:function(e,n,t){"use strict";t.r(n);var i={template:'<div class="entity-chooser">\n        <entity-chooser-list\n            class="entity-chooser-list--left"\n            :entities="unchosenFilteredEntities"\n            :filtering="true"\n            :disabled="disabled"\n            @select="handleSelect"\n            @filter="handleFiltering"\n        ></entity-chooser-list>\n        <div class="entity-chooser-buttons">\n            <button class="btn btn-default btn-block" @click="chooseAll" :disabled="disabled || hasNoUnchosenEntities" title="Select all">all</button>\n            <button class="btn btn-default btn-block" @click="chooseNone" :disabled="disabled || hasNoChosenEntities" title="Select none">none</button>\n        </div>\n        <entity-chooser-list\n            class="entity-chooser-list--right"\n            :entities="chosenEntities"\n            :disabled="disabled"\n            @select="handleDeselect"\n        ></entity-chooser-list>\n    </div>',components:{entityChooserList:{template:'<div class="entity-chooser-list" :class="classObject">\n        <input type="text" class="form-control entity-chooser-list-search" placeholder="Filter..." v-model="filterQuery" v-if="filtering" :disabled="disabled">\n        <ul>\n            <li v-for="e in entities" @click="select(e)">\n                <span v-text="e.name"></span>\n                <span v-if="true"><br><span class="text-muted" v-text="e.description"></span></span>\n            </li>\n        </ul>\n    </div>',props:{entities:{type:Array,required:!0},filtering:{type:Boolean,default:!1},disabled:{type:Boolean,default:!1}},data:function(){return{filterQuery:""}},computed:{classObject:function(){return{"entity-chooser-list--disabled":this.disabled}}},methods:{select:function(e){this.disabled||this.$emit("select",e)}},watch:{filterQuery:function(e){this.$emit("filter",e)}}}},props:{entities:{type:Array,required:!0},disabled:{type:Boolean,default:!1}},data:function(){return{chosenIds:{},filterQuery:""}},computed:{unchosenEntities:function(){var e=this;return this.entities.filter((function(n){return!e.chosenIds[n.id]}))},unchosenFilteredEntities:function(){var e=this.filterQuery.trim();if(e){var n=e.toLowerCase().split(" ");return this.unchosenEntities.filter((function(e){var t=e.name.toLowerCase();return e.description&&(t+=" "+e.description.toLowerCase()),n.reduce((function(e,n){return e&&-1!==t.indexOf(n)}),!0)}))}return this.unchosenEntities},chosenEntities:function(){var e=this;return this.entities.filter((function(n){return e.chosenIds[n.id]}))},hasNoUnchosenEntities:function(){return 0===this.unchosenEntities.length},hasNoChosenEntities:function(){return 0===this.chosenEntities.length}},methods:{handleSelect:function(e){Vue.set(this.chosenIds,e.id,!0)},handleDeselect:function(e){this.chosenIds[e.id]=!1},chooseAll:function(){this.unchosenFilteredEntities.forEach(this.handleSelect)},chooseNone:function(){this.chosenEntities.forEach(this.handleDeselect)},handleFiltering:function(e){this.filterQuery=e}},watch:{chosenEntities:function(e){this.$emit("select",e)}}},s=biigle.$require("messages").handleErrorResponse,o=biigle.$require("api.labelTree"),r=biigle.$require("core.mixins.loader"),a=biigle.$require("api.projects"),l=biigle.$require("core.components.typeahead"),c=biigle.$require("api.users"),u={volumes:biigle.$require("api.volumes"),labelTrees:o,users:c},h={mixins:[r],components:{tabs:VueStrap.tabs,tab:VueStrap.tab,entityChooser:i},data:{exportApiUrl:null,allowedExports:[],entities:{volumes:[],labelTrees:[],users:[]},chosenEntities:{volumes:[],labelTrees:[],users:[]},currentTab:0},computed:{indexMap:function(){var e=this;return["volumes","labelTrees","users"].filter((function(n){return-1!==e.allowedExports.indexOf(n)}))},volumes:function(){return this.entities.volumes.map((function(e){return e.description=e.projects.map((function(e){return e.name})).join(", "),e}))},labelTrees:function(){return this.entities.labelTrees.map((function(e){return e.version&&(e.name=e.name+" @ "+e.version.name),e}))},users:function(){return this.entities.users.map((function(e){return e.name=e.firstname+" "+e.lastname,e.email&&(e.description=e.email),e}))},hasNoChosenVolumes:function(){return 0===this.chosenEntities.volumes.length},hasNoChosenLabelTrees:function(){return 0===this.chosenEntities.labelTrees.length},hasNoChosenUsers:function(){return 0===this.chosenEntities.users.length},volumeRequestUrl:function(){return this.exportApiUrl+"/volumes"+this.getQueryString("volumes")},labelTreeRequestUrl:function(){return this.exportApiUrl+"/label-trees"+this.getQueryString("labelTrees")},userRequestUrl:function(){return this.exportApiUrl+"/users"+this.getQueryString("users")}},methods:{handleSwitchedTab:function(e){this.currentTab=e},fetchEntities:function(e){var n=this;0===this.entities[e].length&&(this.startLoading(),u[e].get().then((function(t){return n.entities[e]=t.data}),s).finally(this.finishLoading))},handleChosenVolumes:function(e){this.chosenEntities.volumes=e},handleChosenLabelTrees:function(e){this.chosenEntities.labelTrees=e},handleChosenUsers:function(e){this.chosenEntities.users=e},getQueryString:function(e){var n=this.entities[e],t=this.chosenEntities[e];return n.length/2>t.length?"?only="+(t.map((function(e){return e.id})).join(",")||-1):n.length>t.length?"?except="+n.filter((function(e){return-1===t.indexOf(e)})).map((function(e){return e.id})).join(","):""}},watch:{currentTab:function(e){this.fetchEntities(this.indexMap[e])}},created:function(){this.exportApiUrl=biigle.$require("sync.exportApiUrl"),this.allowedExports=biigle.$require("sync.allowedExports"),this.fetchEntities(this.indexMap[0])}},f=Vue.resource("api/v1/import{/token}"),d={mixins:[r],components:{entityChooser:i},data:function(){return{success:!1}},methods:{importSuccess:function(){this.success=!0}}},m={data:function(){return{success:!1,userCandidates:[],conflictingParents:[],chosenLabels:[],importLabels:[]}},computed:{userMap:function(){var e={};return this.userCandidates.forEach((function(n){n.name=n.firstname+" "+n.lastname,e[n.id]=n})),e},labelMap:function(){var e={};return this.importLabels.forEach((function(n){e[n.id]=n})),e},conflictingParentMap:function(){var e={};return this.conflictingParents.forEach((function(n){e[n.id]=n})),e},conflictingLabels:function(){var e=this;return this.chosenLabels.filter((function(e){return e.hasOwnProperty("conflicting_name")||e.hasOwnProperty("conflicting_parent_id")})).map((function(n){return n.hasOwnProperty("conflicting_parent_id")&&(n.parent=e.labelMap[n.parent_id],n.conflicting_parent=e.conflictingParentMap[n.conflicting_parent_id]),n}))},hasConflictingLabels:function(){return this.conflictingLabels.length>0},hasUnresolvedConflicts:function(){var e=this;return!this.conflictingLabels.reduce((function(n,t){return n&&e.isLabelConflictResolved(t)}),!0)},nameConflictResolutions:function(){var e=this,n={};return this.conflictingLabels.forEach((function(t){e.hasLabelConflictingName(t)&&(n[t.id]=t.conflicting_name_resolution)})),n},parentConflictResolutions:function(){var e=this,n={};return this.conflictingLabels.forEach((function(t){e.hasLabelConflictingParent(t)&&(n[t.id]=t.conflicting_parent_resolution)})),n},panelClass:function(){return{"panel-danger":this.hasUnresolvedConflicts}},panelBodyClass:function(){return{"text-danger":this.hasUnresolvedConflicts}}},methods:{importSuccess:function(){this.success=!0},hasLabelConflictingName:function(e){return e.hasOwnProperty("conflicting_name")},hasLabelConflictingParent:function(e){return e.hasOwnProperty("conflicting_parent_id")},isLabelConflictResolved:function(e){return(!this.hasLabelConflictingName(e)||e.conflicting_name_resolution)&&(!this.hasLabelConflictingParent(e)||e.conflicting_parent_resolution)},chooseAllImportInformation:function(){var e=this;this.conflictingLabels.forEach((function(n){e.chooseImportParent(n),e.chooseImportName(n)}))},chooseAllExistingInformation:function(){var e=this;this.conflictingLabels.forEach((function(n){e.chooseExistingParent(n),e.chooseExistingName(n)}))},chooseImportParent:function(e){this.hasLabelConflictingParent(e)&&Vue.set(e,"conflicting_parent_resolution","import")},chooseImportName:function(e){this.hasLabelConflictingName(e)&&Vue.set(e,"conflicting_name_resolution","import")},chooseExistingParent:function(e){this.hasLabelConflictingParent(e)&&Vue.set(e,"conflicting_parent_resolution","existing")},chooseExistingName:function(e){this.hasLabelConflictingName(e)&&Vue.set(e,"conflicting_name_resolution","existing")}},created:function(){this.importLabels=biigle.$require("sync.importLabels")}},p={mixins:[d,m],data:{importToken:null,adminRoleId:null,labelCandidates:[],conflictingParents:[],userCandidates:[],labelTreeCandidates:[],chosenLabelTrees:[],chosenLabels:[]},computed:{chosenUsers:function(){var e=this,n=[];return this.chosenLabelTrees.forEach((function(t){t.members.forEach((function(t){t.role_id===e.adminRoleId&&-1===n.indexOf(t.id)&&n.push(t.id)}))})),n.filter((function(n){return e.userMap.hasOwnProperty(n)})).map((function(n){return e.userMap[n]}))},hasChosenUsers:function(){return this.chosenUsers.length>0},labels:function(){return this.labelCandidates.map((function(e){return e.description="Label tree: "+e.label_tree_name,e}))},hasNoChosenItems:function(){return 0===this.chosenLabelTrees.length&&0===this.chosenLabels.length},submitTitle:function(){return this.hasNoChosenItems?"Choose label trees or labels to import":this.hasUnresolvedConflicts?"Resolve the label conflicts":"Perform the import"},chosenLabelTreeIds:function(){return this.chosenLabelTrees.map((function(e){return e.id}))},chosenLabelIds:function(){return this.chosenLabels.map((function(e){return e.id}))}},methods:{handleChosenLabelTrees:function(e){this.chosenLabelTrees=e},handleChosenLabels:function(e){this.chosenLabels=e},performImport:function(){this.startLoading();var e={};this.chosenLabelTreeIds.length<this.labelTreeCandidates.length&&(e.only_label_trees=this.chosenLabelTreeIds),this.chosenLabelIds.length<this.labelCandidates.length&&(e.only_labels=this.chosenLabelIds),this.hasConflictingLabels&&(e.name_conflicts=this.nameConflictResolutions,e.parent_conflicts=this.parentConflictResolutions),f.update({token:this.importToken},e).then(this.importSuccess,s).finally(this.finishLoading)}},created:function(){this.importToken=biigle.$require("sync.importToken"),this.adminRoleId=biigle.$require("sync.adminRoleId"),this.labelCandidates=biigle.$require("sync.labelCandidates"),this.conflictingParents=biigle.$require("sync.conflictingParents"),this.userCandidates=biigle.$require("sync.userCandidates"),this.labelTreeCandidates=biigle.$require("sync.labelTreeCandidates").map((function(e){return e.version&&(e.name=e.name+" @ "+e.version.name),e}))}},b={mixins:[d],data:{importToken:null,importCandidates:[],chosenCandidates:[]},computed:{users:function(){return this.importCandidates.map((function(e){return e.name=e.firstname+" "+e.lastname,e.email&&(e.description=e.email),e}))},hasNoChosenUsers:function(){return 0===this.chosenCandidates.length},chosenCandidateIds:function(){return this.chosenCandidates.map((function(e){return e.id}))}},methods:{handleChosenUsers:function(e){this.chosenCandidates=e},performImport:function(){this.startLoading();var e={};this.chosenCandidates.length<this.importCandidates.length&&(e.only=this.chosenCandidateIds),f.update({token:this.importToken},e).then(this.importSuccess,s).finally(this.finishLoading)}},created:function(){this.importToken=biigle.$require("sync.importToken"),this.importCandidates=biigle.$require("sync.importCandidates")}},g={mixins:[d,m],components:{typeahead:l},data:{importToken:null,adminRoleId:null,volumeCandidates:[],labelCandidates:[],conflictingParents:[],userCandidates:[],chosenVolumes:[],labelTreeCandidates:[],typeaheadTemplate:'<span v-text="item.name"></span><br><small v-text="item.description"></small>',availableProjects:[],targetProject:null},computed:{volumes:function(){return this.volumeCandidates.map((function(e){return Vue.set(e,"new_url",e.url),e}))},labelTreeMap:function(){var e={};return this.labelTreeCandidates.forEach((function(n){e[n.id]=n})),e},labelCandidateMap:function(){var e={};return this.labelCandidates.forEach((function(n){e[n.id]=n})),e},chosenUsers:function(){var e=this,n=[];return this.chosenVolumes.forEach((function(e){e.users.forEach((function(e){-1===n.indexOf(e)&&n.push(e)}))})),n.filter((function(n){return e.userMap.hasOwnProperty(n)})).map((function(n){return e.userMap[n]}))},hasChosenUsers:function(){return this.chosenUsers.length>0},chosenLabelTrees:function(){var e=this,n=[];return this.chosenVolumes.forEach((function(e){e.label_trees.forEach((function(e){-1===n.indexOf(e)&&n.push(e)}))})),n.filter((function(n){return e.labelTreeMap.hasOwnProperty(n)})).map((function(n){return e.labelTreeMap[n]}))},hasChosenLabelTrees:function(){return this.chosenLabelTrees.length>0},chosenLabelTreeAdmins:function(){var e=this,n=[];return this.chosenLabelTrees.forEach((function(t){t.members.forEach((function(t){t.role_id===e.adminRoleId&&-1===n.indexOf(t.id)&&n.push(t.id)}))})),n.filter((function(n){return e.userMap.hasOwnProperty(n)})).map((function(n){return e.userMap[n]}))},hasChosenLabelTreeAdmins:function(){return this.chosenLabelTreeAdmins.length>0},chosenLabelsOverride:function(){var e=this,n=[];return this.chosenVolumes.forEach((function(e){e.labels.forEach((function(e){-1===n.indexOf(e)&&n.push(e)}))})),n.filter((function(n){return e.labelCandidateMap.hasOwnProperty(n)})).map((function(n){return e.labelCandidateMap[n]}))},hasChosenLabels:function(){return this.chosenLabels.length>0},hasNoChosenItems:function(){return 0===this.chosenVolumes.length},submitTitle:function(){return this.hasNoChosenItems?"Choose volumes to import":this.hasUnresolvedConflicts?"Resolve the label conflicts":this.hasNoSelectedProject?"Select a target project":"Perform the import"},hasNoSelectedProject:function(){return null===this.targetProject},cantDoImport:function(){return this.loading||this.hasNoChosenItems||this.hasUnresolvedConflicts||this.hasNoSelectedProject},chosenVolumeIds:function(){return this.chosenVolumes.map((function(e){return e.id}))},newVolumeUrls:function(){var e={};return this.chosenVolumes.forEach((function(n){n.url!==n.new_url&&(e[n.id]=n.new_url)})),e},hasNewVolumeUrls:function(){return this.chosenVolumes.reduce((function(e,n){return e||n.url!==n.new_url}),!1)}},methods:{selectTargetProject:function(e){this.targetProject=e},handleChosenVolumes:function(e){this.chosenVolumes=e},performImport:function(){this.startLoading();var e={project_id:this.targetProject.id};this.chosenVolumeIds.length<this.volumes.length&&(e.only=this.chosenVolumeIds),this.hasNewVolumeUrls&&(e.new_urls=this.newVolumeUrls),this.hasConflictingLabels&&(e.name_conflicts=this.nameConflictResolutions,e.parent_conflicts=this.parentConflictResolutions),f.update({token:this.importToken},e).then(this.importSuccess,s).finally(this.finishLoading)}},watch:{hasNoChosenItems:function(e){var n=this;0!==this.availableProjects.length||e||a.query().then((function(e){n.availableProjects=e.body}),s)},chosenLabelsOverride:function(e){this.chosenLabels=e}},created:function(){this.importToken=biigle.$require("sync.importToken"),this.adminRoleId=biigle.$require("sync.adminRoleId"),this.volumeCandidates=biigle.$require("sync.volumeCandidates"),this.labelCandidates=biigle.$require("sync.labelCandidates"),this.conflictingParents=biigle.$require("sync.conflictingParents"),this.userCandidates=biigle.$require("sync.userCandidates"),this.labelTreeCandidates=biigle.$require("sync.labelTreeCandidates").map((function(e){return e.version&&(e.name=e.name+" @ "+e.version.name),e}))}};biigle.$mount("export-container",h),biigle.$mount("label-tree-import-container",p),biigle.$mount("user-import-container",b),biigle.$mount("volume-import-container",g)},zcrr:function(e,n){}});